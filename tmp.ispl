
    Agent train1
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept1;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train2
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept2;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train3
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept3;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train4
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept4;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train5
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept5;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train6
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept6;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train7
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept7;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train8
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept8;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train9
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept9;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train10
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept10;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train11
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept11;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent train12
    	Lobsvars={};
    	Vars :
    		out: boolean;
    		grant: boolean;
    		gate: boolean;
    		win: boolean;
    	end Vars
    	Actions={idle,request,move,exit};
    	Protocol :
    		out=true : {request,idle};
    		grant=true : {move};
    		gate=true : {exit};
    	end Protocol
    	Evolution :
    		out=true and grant=false and gate=false and win=false if (out=true and Action=idle) or (gate=true and Action=exit);
    		grant=true and out=false and gate=false and win=false if out=true and Action=request and controller.Action=accept12;
    		gate=true and grant=false and out=false and win=true if grant=true and Action=move;
    	end Evolution
    end Agent

    Agent controller
    	Lobsvars={};
    	Vars :
    		free: boolean;
    		occupied: boolean;
    	end Vars
    	Actions={idle,accept1,accept2,accept3,accept4,accept5,accept6,accept7,accept8,accept9,accept10,accept11,accept12};
    	Protocol :
    		free=true : {idle,accept1,accept2,accept3,accept4,accept5,accept6,accept7,accept8,accept9,accept10,accept11,accept12};
    		occupied=true : {idle};
    	end Protocol
    	Evolution :
    		occupied=true and free=false if (free=true and ((controller.Action=accept1 and train1.Action=request) or (controller.Action=accept2 and train2.Action=request) or (controller.Action=accept3 and train3.Action=request) or (controller.Action=accept4 and train4.Action=request) or (controller.Action=accept5 and train5.Action=request) or (controller.Action=accept6 and train6.Action=request) or (controller.Action=accept7 and train7.Action=request) or (controller.Action=accept8 and train8.Action=request) or (controller.Action=accept9 and train9.Action=request) or (controller.Action=accept10 and train10.Action=request) or (controller.Action=accept11 and train11.Action=request) or (controller.Action=accept12 and train12.Action=request))) or (occupied=true and controller.Action=idle);
    		free=true and occupied=false if occupied=true and controller.Action=idle;
    		free=true and occupied=false if free=true and controller.Action=idle;
    	end Evolution
    end Agent

    Evaluation
    	win if (train1.win=true or train2.win=true or train3.win=true or train4.win=true or train5.win=true or train6.win=true or train7.win=true or train8.win=true or train9.win=true or train10.win=true or train11.win=true or train12.win=true);
    end Evaluation
    InitStates
	train1.out=true and train1.grant=false and train1.gate=false and train1.win=false and
	train2.out=true and train2.grant=false and train2.gate=false and train2.win=false and
	train3.out=true and train3.grant=false and train3.gate=false and train3.win=false and
	train4.out=true and train4.grant=false and train4.gate=false and train4.win=false and
	train5.out=true and train5.grant=false and train5.gate=false and train5.win=false and
	train6.out=true and train6.grant=false and train6.gate=false and train6.win=false and
	train7.out=true and train7.grant=false and train7.gate=false and train7.win=false and
	train8.out=true and train8.grant=false and train8.gate=false and train8.win=false and
	train9.out=true and train9.grant=false and train9.gate=false and train9.win=false and
	train10.out=true and train10.grant=false and train10.gate=false and train10.win=false and
	train11.out=true and train11.grant=false and train11.gate=false and train11.win=false and
	train12.out=true and train12.grant=false and train12.gate=false and train12.win=false and
    	controller.free=true and controller.occupied=false;
    end InitStates
    Groups
g1 = {train2};
end Groups

    Formulae
    	<g1>F(win);
    end Formulae
